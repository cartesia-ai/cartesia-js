/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { mockServerPool } from "../mock-server/MockServerPool";
import { CartesiaClient } from "../../src/Client";

describe("Voices", () => {
    test("delete", async () => {
        const server = mockServerPool.createServer();
        const client = new CartesiaClient({ token: "test", environment: server.baseUrl });

        server.mockEndpoint().delete("/voices/id").respondWith().statusCode(200).build();

        const response = await client.voices.delete("id");
        expect(response).toEqual(undefined);
    });

    test("update", async () => {
        const server = mockServerPool.createServer();
        const client = new CartesiaClient({ token: "test", environment: server.baseUrl });
        const rawRequestBody = {
            name: "Sarah Peninsular Spanish",
            description: "Sarah Voice in Peninsular Spanish",
            gender: "feminine",
        };
        const rawResponseBody = {
            id: "8f7d3c2e-1a2b-3c4d-5e6f-7g8h9i0j1k2l",
            is_public: false,
            is_owner: true,
            name: "Sarah Peninsular Spanish",
            description: "Sarah Voice in Peninsular Spanish",
            created_at: "2024-03-15T10:30:00.000Z",
            language: "es",
            gender: "feminine",
        };
        server
            .mockEndpoint()
            .patch("/voices/8f7d3c2e-1a2b-3c4d-5e6f-7g8h9i0j1k2l")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.voices.update("8f7d3c2e-1a2b-3c4d-5e6f-7g8h9i0j1k2l", {
            name: "Sarah Peninsular Spanish",
            description: "Sarah Voice in Peninsular Spanish",
            gender: "feminine",
        });
        expect(response).toEqual({
            id: "8f7d3c2e-1a2b-3c4d-5e6f-7g8h9i0j1k2l",
            isPublic: false,
            isOwner: true,
            name: "Sarah Peninsular Spanish",
            description: "Sarah Voice in Peninsular Spanish",
            createdAt: new Date("2024-03-15T10:30:00.000Z"),
            language: "es",
            gender: "feminine",
        });
    });

    test("get", async () => {
        const server = mockServerPool.createServer();
        const client = new CartesiaClient({ token: "test", environment: server.baseUrl });

        const rawResponseBody = {
            id: "id",
            is_owner: true,
            is_public: true,
            name: "name",
            description: "description",
            gender: "masculine",
            created_at: "2024-01-15T09:30:00Z",
            is_starred: true,
            language: "en",
        };
        server.mockEndpoint().get("/voices/id").respondWith().statusCode(200).jsonBody(rawResponseBody).build();

        const response = await client.voices.get("id");
        expect(response).toEqual({
            id: "id",
            isOwner: true,
            isPublic: true,
            name: "name",
            description: "description",
            gender: "masculine",
            createdAt: new Date("2024-01-15T09:30:00.000Z"),
            isStarred: true,
            language: "en",
        });
    });

    test("localize", async () => {
        const server = mockServerPool.createServer();
        const client = new CartesiaClient({ token: "test", environment: server.baseUrl });
        const rawRequestBody = {
            voice_id: "694f9389-aac1-45b6-b726-9d9369183238",
            name: "Sarah Peninsular Spanish",
            description: "Sarah Voice in Peninsular Spanish",
            language: "es",
            original_speaker_gender: "female",
            dialect: "pe",
        };
        const rawResponseBody = {
            id: "8f7d3c2e-1a2b-3c4d-5e6f-7g8h9i0j1k2l",
            user_id: "user_id",
            is_public: false,
            name: "Sarah Peninsular Spanish",
            description: "Sarah Voice in Peninsular Spanish",
            created_at: "2024-03-15T10:30:00.000Z",
            language: "es",
        };
        server
            .mockEndpoint()
            .post("/voices/localize")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.voices.localize({
            voiceId: "694f9389-aac1-45b6-b726-9d9369183238",
            name: "Sarah Peninsular Spanish",
            description: "Sarah Voice in Peninsular Spanish",
            language: "es",
            originalSpeakerGender: "female",
            dialect: "pe",
        });
        expect(response).toEqual({
            id: "8f7d3c2e-1a2b-3c4d-5e6f-7g8h9i0j1k2l",
            userId: "user_id",
            isPublic: false,
            name: "Sarah Peninsular Spanish",
            description: "Sarah Voice in Peninsular Spanish",
            createdAt: new Date("2024-03-15T10:30:00.000Z"),
            language: "es",
        });
    });
});
