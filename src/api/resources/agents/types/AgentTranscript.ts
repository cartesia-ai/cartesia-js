/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as Cartesia from "../../../index.js";

export interface AgentTranscript {
    /** The role of the participant in the conversation. Roles are `user`, `assistant`, or `system`. `assistant` is the agent. `system` is used to indicate logs during the conversation such as `log_event` or `log_metric`. */
    role: string;
    /** The text content of the transcript. This is the text that was spoken by the user or the agent. */
    text?: string;
    /** The chunks of text at a more granular level in the transcript with timestamps relative to the start of the call. */
    textChunks?: Cartesia.TextChunk[];
    /** The start timestamp in seconds relative to the start of the call. */
    startTimestamp: number;
    /** The end timestamp in seconds relative to the start of the call. */
    endTimestamp: number;
    /** The reason for why the assistant turn ended. This could be `call_ended`, `interrupted`, or `tts_completed`. */
    endReason?: string;
    /** The tool calls made during the turn. */
    toolCalls?: Cartesia.ToolCall[];
    /** The VAD buffer time in milliseconds. */
    vadBufferMs?: number;
    /** The time to first byte in seconds from the agent for text-to-speech. */
    ttsTtfb?: number;
    /** The log event from user code. */
    logEvent?: Cartesia.LogEvent;
    /** The log metric from user code. */
    logMetric?: Cartesia.LogMetric;
}
