/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Cartesia from "../../../../api/index";
import * as core from "../../../../core";
import { TtsRequestVoiceSpecifier } from "./TtsRequestVoiceSpecifier";
import { SupportedLanguage } from "./SupportedLanguage";
import { BytesOutputFormat } from "./BytesOutputFormat";

export const TtsBytesRequest: core.serialization.ObjectSchema<
    serializers.TtsBytesRequest.Raw,
    Cartesia.TtsBytesRequest
> = core.serialization.object({
    modelId: core.serialization.property("model_id", core.serialization.string()),
    transcript: core.serialization.string(),
    voice: TtsRequestVoiceSpecifier,
    language: SupportedLanguage.optional(),
    outputFormat: core.serialization.property("output_format", BytesOutputFormat),
    duration: core.serialization.number().optional(),
});

export declare namespace TtsBytesRequest {
    interface Raw {
        model_id: string;
        transcript: string;
        voice: TtsRequestVoiceSpecifier.Raw;
        language?: SupportedLanguage.Raw | null;
        output_format: BytesOutputFormat.Raw;
        duration?: number | null;
    }
}
