/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index.js";
import * as Cartesia from "../../../../api/index.js";
import * as core from "../../../../core/index.js";
import { WordTimestamps } from "./WordTimestamps.js";
import { PhonemeTimestamps } from "./PhonemeTimestamps.js";
import { ContextId } from "./ContextId.js";
import { FlushId } from "./FlushId.js";

export const WebSocketTtsOutput: core.serialization.ObjectSchema<
    serializers.WebSocketTtsOutput.Raw,
    Cartesia.WebSocketTtsOutput
> = core.serialization.object({
    wordTimestamps: core.serialization.property("word_timestamps", WordTimestamps.optional()),
    phonemeTimestamps: core.serialization.property("phoneme_timestamps", PhonemeTimestamps.optional()),
    audio: core.serialization.unknown().optional(),
    contextId: core.serialization.property("context_id", ContextId.optional()),
    flushId: core.serialization.property("flush_id", FlushId.optional()),
    flushDone: core.serialization.property("flush_done", core.serialization.boolean().optional()),
});

export declare namespace WebSocketTtsOutput {
    export interface Raw {
        word_timestamps?: WordTimestamps.Raw | null;
        phoneme_timestamps?: PhonemeTimestamps.Raw | null;
        audio?: unknown | null;
        context_id?: ContextId.Raw | null;
        flush_id?: FlushId.Raw | null;
        flush_done?: boolean | null;
    }
}
