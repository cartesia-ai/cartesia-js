/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Cartesia from "../../../../api/index";
import * as core from "../../../../core";
import { RawBytesOutputFormat } from "./RawBytesOutputFormat";
import { WavBytesOutputFormat } from "./WavBytesOutputFormat";
import { Mp3OutputFormat } from "./Mp3OutputFormat";

export const BytesOutputFormat: core.serialization.Schema<
    serializers.BytesOutputFormat.Raw,
    Cartesia.BytesOutputFormat
> = core.serialization
    .union("container", {
        raw: RawBytesOutputFormat,
        wav: WavBytesOutputFormat,
        mp3: Mp3OutputFormat,
    })
    .transform<Cartesia.BytesOutputFormat>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace BytesOutputFormat {
    type Raw = BytesOutputFormat.Raw | BytesOutputFormat.Wav | BytesOutputFormat.Mp3;

    interface Raw extends RawBytesOutputFormat.Raw {
        container: "raw";
    }

    interface Wav extends WavBytesOutputFormat.Raw {
        container: "wav";
    }

    interface Mp3 extends Mp3OutputFormat.Raw {
        container: "mp3";
    }
}
