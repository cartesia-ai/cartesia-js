/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Cartesia from "../../../../api/index";
import * as core from "../../../../core";
import { RawOutputFormat } from "./RawOutputFormat";
import { WavOutputFormat } from "./WavOutputFormat";

export const SseOutputFormat: core.serialization.Schema<serializers.SseOutputFormat.Raw, Cartesia.SseOutputFormat> =
    core.serialization
        .union("container", {
            raw: RawOutputFormat,
            wav: WavOutputFormat,
        })
        .transform<Cartesia.SseOutputFormat>({
            transform: (value) => value,
            untransform: (value) => value,
        });

export declare namespace SseOutputFormat {
    type Raw = SseOutputFormat.Raw | SseOutputFormat.Wav;

    interface Raw extends RawOutputFormat.Raw {
        container: "raw";
    }

    interface Wav extends WavOutputFormat.Raw {
        container: "wav";
    }
}
