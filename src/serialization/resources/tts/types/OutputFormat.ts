/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Cartesia from "../../../../api/index";
import * as core from "../../../../core";
import { RawOutputFormat } from "./RawOutputFormat";
import { WavOutputFormat } from "./WavOutputFormat";
import { Mp3OutputFormat } from "./Mp3OutputFormat";

export const OutputFormat: core.serialization.Schema<serializers.OutputFormat.Raw, Cartesia.OutputFormat> =
    core.serialization
        .union("container", {
            raw: RawOutputFormat,
            wav: WavOutputFormat,
            mp3: Mp3OutputFormat,
        })
        .transform<Cartesia.OutputFormat>({
            transform: (value) => value,
            untransform: (value) => value,
        });

export declare namespace OutputFormat {
    type Raw = OutputFormat._Raw | OutputFormat.Wav | OutputFormat.Mp3;

    interface _Raw extends RawOutputFormat.Raw {
        container: "raw";
    }

    interface Wav extends WavOutputFormat.Raw {
        container: "wav";
    }

    interface Mp3 extends Mp3OutputFormat.Raw {
        container: "mp3";
    }
}
