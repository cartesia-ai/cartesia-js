/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Cartesia from "../../../../api/index";
import * as core from "../../../../core";
import { Embedding } from "../../embedding/types/Embedding";
import { Controls } from "./Controls";

export const TtsRequestEmbeddingSpecifier: core.serialization.ObjectSchema<
    serializers.TtsRequestEmbeddingSpecifier.Raw,
    Cartesia.TtsRequestEmbeddingSpecifier
> = core.serialization.object({
    mode: core.serialization.stringLiteral("embedding"),
    embedding: Embedding,
    experimentalControls: core.serialization.property("__experimental_controls", Controls.optional()),
});

export declare namespace TtsRequestEmbeddingSpecifier {
    interface Raw {
        mode: "embedding";
        embedding: Embedding.Raw;
        __experimental_controls?: Controls.Raw | null;
    }
}
