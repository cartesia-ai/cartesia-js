/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index.js";
import * as Cartesia from "../../../../api/index.js";
import * as core from "../../../../core/index.js";
import { VoiceId } from "./VoiceId.js";
import { SupportedLanguage } from "../../tts/types/SupportedLanguage.js";

export const VoiceMetadata: core.serialization.ObjectSchema<serializers.VoiceMetadata.Raw, Cartesia.VoiceMetadata> =
    core.serialization.object({
        id: VoiceId,
        userId: core.serialization.property("user_id", core.serialization.string()),
        isPublic: core.serialization.property("is_public", core.serialization.boolean()),
        name: core.serialization.string(),
        description: core.serialization.string(),
        createdAt: core.serialization.property("created_at", core.serialization.date()),
        language: SupportedLanguage,
    });

export declare namespace VoiceMetadata {
    export interface Raw {
        id: VoiceId.Raw;
        user_id: string;
        is_public: boolean;
        name: string;
        description: string;
        created_at: string;
        language: SupportedLanguage.Raw;
    }
}
