/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Cartesia from "../../../../api/index";
import * as core from "../../../../core";
import { Embedding } from "../../embedding/types/Embedding";
import { LocalizeTargetLanguage } from "./LocalizeTargetLanguage";
import { Gender } from "./Gender";
import { LocalizeDialect } from "./LocalizeDialect";

export const LocalizeVoiceRequest: core.serialization.ObjectSchema<
    serializers.LocalizeVoiceRequest.Raw,
    Cartesia.LocalizeVoiceRequest
> = core.serialization.object({
    embedding: Embedding,
    language: LocalizeTargetLanguage,
    originalSpeakerGender: core.serialization.property("original_speaker_gender", Gender),
    dialect: LocalizeDialect.optional(),
});

export declare namespace LocalizeVoiceRequest {
    interface Raw {
        embedding: Embedding.Raw;
        language: LocalizeTargetLanguage.Raw;
        original_speaker_gender: Gender.Raw;
        dialect?: LocalizeDialect.Raw | null;
    }
}
