/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index.js";
import * as Cartesia from "../../../../api/index.js";
import * as core from "../../../../core/index.js";
import { LocalizeTargetLanguage } from "./LocalizeTargetLanguage.js";
import { Gender } from "./Gender.js";
import { LocalizeDialect } from "./LocalizeDialect.js";

export const LocalizeVoiceRequest: core.serialization.ObjectSchema<
    serializers.LocalizeVoiceRequest.Raw,
    Cartesia.LocalizeVoiceRequest
> = core.serialization.object({
    voiceId: core.serialization.property("voice_id", core.serialization.string()),
    name: core.serialization.string(),
    description: core.serialization.string(),
    language: LocalizeTargetLanguage,
    originalSpeakerGender: core.serialization.property("original_speaker_gender", Gender),
    dialect: LocalizeDialect.optional(),
});

export declare namespace LocalizeVoiceRequest {
    export interface Raw {
        voice_id: string;
        name: string;
        description: string;
        language: LocalizeTargetLanguage.Raw;
        original_speaker_gender: Gender.Raw;
        dialect?: LocalizeDialect.Raw | null;
    }
}
