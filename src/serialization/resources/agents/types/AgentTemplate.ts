/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index.js";
import * as Cartesia from "../../../../api/index.js";
import * as core from "../../../../core/index.js";

export const AgentTemplate: core.serialization.ObjectSchema<serializers.AgentTemplate.Raw, Cartesia.AgentTemplate> =
    core.serialization.object({
        id: core.serialization.string(),
        name: core.serialization.string(),
        description: core.serialization.string().optional(),
        repoUrl: core.serialization.property("repo_url", core.serialization.string()),
        rootDir: core.serialization.property("root_dir", core.serialization.string()),
        requiredEnvVars: core.serialization.property(
            "required_env_vars",
            core.serialization.list(core.serialization.string()).optional(),
        ),
        dependencies: core.serialization.list(core.serialization.string()).optional(),
        ownerId: core.serialization.property("owner_id", core.serialization.string()),
        createdAt: core.serialization.property("created_at", core.serialization.date()),
        updatedAt: core.serialization.property("updated_at", core.serialization.date()),
    });

export declare namespace AgentTemplate {
    export interface Raw {
        id: string;
        name: string;
        description?: string | null;
        repo_url: string;
        root_dir: string;
        required_env_vars?: string[] | null;
        dependencies?: string[] | null;
        owner_id: string;
        created_at: string;
        updated_at: string;
    }
}
