/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index.js";
import * as Cartesia from "../../../../api/index.js";
import * as core from "../../../../core/index.js";

export const Deployment: core.serialization.ObjectSchema<serializers.Deployment.Raw, Cartesia.Deployment> =
    core.serialization.object({
        id: core.serialization.string(),
        agentId: core.serialization.property("agent_id", core.serialization.string()),
        status: core.serialization.string(),
        isPinned: core.serialization.property("is_pinned", core.serialization.boolean()),
        isLive: core.serialization.property("is_live", core.serialization.boolean()),
        envVarCollectionId: core.serialization.property("env_var_collection_id", core.serialization.string()),
        sourceCodeFileId: core.serialization.property("source_code_file_id", core.serialization.string()),
        gitCommitHash: core.serialization.property("git_commit_hash", core.serialization.string()),
        createdAt: core.serialization.property("created_at", core.serialization.date()),
        updatedAt: core.serialization.property("updated_at", core.serialization.date()),
        buildCompletedAt: core.serialization.property("build_completed_at", core.serialization.date()),
        buildError: core.serialization.property("build_error", core.serialization.string().optional()),
        buildLogs: core.serialization.property("build_logs", core.serialization.string()),
        buildStartedAt: core.serialization.property("build_started_at", core.serialization.date()),
        deploymentStartedAt: core.serialization.property("deployment_started_at", core.serialization.date()),
        deploymentCompletedAt: core.serialization.property("deployment_completed_at", core.serialization.date()),
        deploymentError: core.serialization.property("deployment_error", core.serialization.string().optional()),
    });

export declare namespace Deployment {
    export interface Raw {
        id: string;
        agent_id: string;
        status: string;
        is_pinned: boolean;
        is_live: boolean;
        env_var_collection_id: string;
        source_code_file_id: string;
        git_commit_hash: string;
        created_at: string;
        updated_at: string;
        build_completed_at: string;
        build_error?: string | null;
        build_logs: string;
        build_started_at: string;
        deployment_started_at: string;
        deployment_completed_at: string;
        deployment_error?: string | null;
    }
}
